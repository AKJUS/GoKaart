#!/bin/sh

# This is a script that knows how to generate swift code from a secret.
# There is a build rule that knows to execute this to convert a
# .secret file to a .swift file

# Get the token text
token="$(cat ~/mapbox-token.txt 2>/dev/null)"

# Generate the swift code for it

if [ "$token" ]; then
	# Obfuscate
	echo '#if targetEnvironment(macCatalyst)'
	echo "// Don't use Mapbox token on MacCatalyst to help keep token safe"
	echo 'let MapboxLocatorToken = ""'
	echo '#else'
	hash="$(od -A n -t u8 -N 7 /dev/urandom)"
	echo "fileprivate let hash: UInt64 = $hash"
	echo 'let MapboxLocatorToken = String('
	echo "["

	python3 -c '
import sys
token = sys.argv[1][::-1]
hash = int(sys.argv[2])
for ch in token:
	print("UInt8(",(ord(ch)^hash)&0xFF,"),")
	hash = (hash * 7 + ord(ch)) & 0x0FFFFFFFFFFFFFFF
' $token $hash

	echo "]"
	echo '.reduce(("",hash), { pair, item in
				let chValue = UInt8(pair.1 & 0xFF) ^ item
				let hash = (pair.1 * 7 + UInt64(chValue)) & 0x0FFFFFFFFFFFFFFF
				return (pair.0 + String(UnicodeScalar(chValue)),hash)
			})
			.0.reversed()'
	echo ')'
	echo '#endif'
else
	# Token is unknown
	echo 'let MapboxLocatorToken = ""'
fi
